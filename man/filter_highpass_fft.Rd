% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_bandwidth.R
\name{filter_highpass_fft}
\alias{filter_highpass_fft}
\title{Apply FFT-based Highpass Filter to Signal}
\usage{
filter_highpass_fft(
  x,
  cutoff_freq,
  sampling_rate,
  na_action = c("interpolate", "remove", "error")
)
}
\arguments{
\item{x}{Numeric vector containing the signal to be filtered}

\item{cutoff_freq}{Cutoff frequency in Hz}

\item{sampling_rate}{Sampling rate of the signal in Hz}

\item{na_action}{How to handle NA values:
- "interpolate": Linear interpolation of NAs (default)
- "remove": Remove NAs and adjust time indices
- "error": Raise an error if NAs are present}
}
\value{
Numeric vector containing the filtered signal
}
\description{
This function implements a highpass filter using the Fast Fourier Transform (FFT).
It provides a sharp frequency cutoff but may introduce ringing artifacts (Gibbs phenomenon).
}
\details{
FFT-based filtering applies a hard cutoff in the frequency domain. This can be
advantageous for:
\itemize{
\item Precise frequency selection
\item Batch processing of long signals
\item Cases where sharp frequency cutoffs are desired
}

Limitations:
\itemize{
\item May introduce ringing artifacts
\item Assumes periodic signal (can cause edge effects)
\item Less suitable for real-time processing
}

Missing Value Handling:
See lowpass_filter documentation for details on NA handling approaches.
}
