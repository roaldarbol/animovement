% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/na_interpolation.R
\name{replace_missing}
\alias{replace_missing}
\title{Replace Missing Values in Pose Data}
\usage{
replace_missing(data, method = "linear", maxgap = 10)
}
\arguments{
\item{data}{A data frame containing the columns \code{individual}, \code{keypoint}, \code{x}, and \code{y}.
Missing values in the \code{x} and \code{y} columns will be replaced.}

\item{method}{A character string specifying the interpolation method to use.
Options include:
\itemize{
\item{"linear" - for linear interpolation (default).}
\item{"spline" - for spline interpolation.}
\item{"stine" - for Stineman interpolation.}
}}

\item{maxgap}{An integer specifying the maximum number of consecutive missing values
to interpolate. If the run of missing values exceeds \code{maxgap}, those values will
remain as \code{NA}. Default is 10.}
}
\value{
A data frame with missing values in the \code{x} and \code{y} columns replaced according
to the specified interpolation method. The grouping by \code{individual} and \code{keypoint} is preserved.
}
\description{
Replaces missing values (NAs) in \code{x} and \code{y} coordinates of keypoints
for grouped data using a specified interpolation method. This function is tailored
for pose estimation datasets, where observations are grouped by individuals and keypoints.
}
\details{
The function utilizes the \code{na_interpolation} function from the \code{imputeTS} package
to perform the interpolation. The interpolation respects groupings by \code{individual}
and \code{keypoint}, allowing for independent treatment of each keypoint's trajectory within
each individual.
}
\examples{
# Example data
data <- data.frame(
  individual = c(1, 1, 1, 1, 2, 2, 2, 2),
  keypoint = c("nose", "nose", "nose", "nose", "eye", "eye", "eye", "eye"),
  x = c(1, NA, 3, 4, 2, NA, NA, 5),
  y = c(5, 6, NA, 8, NA, 2, 3, 4)
)

# Replace missing values using linear interpolation
replace_missing(data, method = "linear", maxgap = 2)

# Replace missing values using spline interpolation
replace_missing(data, method = "spline")

}
\seealso{
\code{\link[imputeTS]{na_interpolation}}, \code{\link[dplyr]{mutate}}
}
