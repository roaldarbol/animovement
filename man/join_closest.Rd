% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_closest.R
\name{join_closest}
\alias{join_closest}
\title{Join Data Frames by Closest Time Match, with Optional Grouping}
\usage{
join_closest(x, y, x_time_col, y_time_col, direction = ">=", by = NULL)
}
\arguments{
\item{x}{Left-hand data frame}

\item{y}{Right-hand data frame}

\item{x_time_col}{Name of the time column in x}

\item{y_time_col}{Name of the time column in y}

\item{direction}{Either '>=' (default) to match to closest preceding or equal value,
or '<=' to match to closest following or equal value}

\item{by}{Character vector of column names to group by. These columns must exist
in both data frames and will be joined exactly.}
}
\value{
A data frame containing all columns from x and all columns from y except y_time_col.
Rows in x with no matching timestamp in y will have NA values for y columns.
}
\description{
Joins two data frames by matching the closest timestamp in the right-hand data frame
to each timestamp in the left-hand data frame, optionally within groups. Can match to
either the closest preceding or following timestamp.
}
\examples{
x <- data.frame(
  group = c(1,1,1, 2,2,2),
  time = c(0,1,2, 0,1,2),
  value1 = 1:6
)
y <- data.frame(
  group = c(1,1, 2,2),
  timestamp = c(0.5,1.5, 0.5,1.5),
  value2 = letters[1:4]
)

# Match to closest preceding value within groups
join_closest(x, y, "time", "timestamp", by = "group", direction = ">=")
}
